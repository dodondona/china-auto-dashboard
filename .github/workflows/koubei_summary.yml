# .github/workflows/koubei_storywriter.yml
name: koubei_storywriter

on:
  workflow_dispatch:
    inputs:
      series_id:
        description: "Autohome series ID（例: 7806）"
        required: true
        type: string

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install pandas openai
          pip install playwright beautifulsoup4 lxml requests || true
          python -m playwright install chromium || true

      # （任意）上流ジョブが Zip を artifact で出している場合に備えて取得を試行
      - name: Try download artifact (autohome_reviews_<id>)
        uses: actions/download-artifact@v4
        with:
          name: autohome_reviews_${{ inputs.series_id }}
          path: .
        continue-on-error: true

      - name: Try download artifact (koubei_story_and_reports_<id>)
        uses: actions/download-artifact@v4
        with:
          name: koubei_story_and_reports_${{ inputs.series_id }}
          path: .
        continue-on-error: true

      - name: Detect zip input
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          ID="${{ inputs.series_id }}"
          ZIP=""
          for cand in \
            "koubei_story_and_reports_${ID}.zip" \
            "autohome_reviews_${ID}.zip"
          do
            if [ -s "$cand" ]; then ZIP="$cand"; break; fi
          done
          # fallback: 似たファイル名がある場合の最初の1つ
          if [ -z "$ZIP" ]; then
            ZIP=$(ls -1 *"${ID}"*.zip 2>/dev/null | head -n1 || true)
          fi
          if [ -z "$ZIP" ]; then
            echo "No zip found for series_id=${ID}" >&2
            exit 1
          fi
          echo "zip=$ZIP" >> "$GITHUB_OUTPUT"
          echo "Using ZIP: $ZIP"

      - name: Build CSV from JSON zip
        run: |
          set -euo pipefail
          python tools/koubei_summary_to_csv.py "${{ steps.detect.outputs.zip }}"

      - name: Generate story summary (LLM or fallback)
        run: |
          set -euo pipefail
          python tools/koubei_storywriter.py "${{ inputs.series_id }}"

      - name: Upload outputs
        uses: actions/upload-artifact@v4
        with:
          name: koubei_story_${{ inputs.series_id }}
          path: |
            autohome_reviews_${{ inputs.series_id }}.csv
            autohome_reviews_${{ inputs.series_id }}_story.txt
            autohome_reviews_${{ inputs.series_id }}_story.md
