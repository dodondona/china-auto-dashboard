name: koubei_storywriter

on:
  workflow_dispatch:
    inputs:
      series_id:
        description: "Autohome series ID（例: 7806）"
        required: true
        type: string
      zip_path:
        description: "Optional: workspaceに既にあるZIPのパス"
        required: false
        default: ""
        type: string
      allow_refetch:
        description: "ZIPが見つからない場合に再取得を許可"
        required: false
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

permissions:
  contents: read
  actions: read

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: "python -m pip install --upgrade pip && pip install pandas openai && pip install playwright beautifulsoup4 lxml requests || true && python -m playwright install chromium || true"

      - name: Try download artifact (autohome_reviews_<id>)
        uses: actions/download-artifact@v4
        with:
          name: autohome_reviews_${{ inputs.series_id }}
          path: .
        continue-on-error: true

      - name: Try download artifact (koubei_story_and_reports_<id>)
        uses: actions/download-artifact@v4
        with:
          name: koubei_story_and_reports_${{ inputs.series_id }}
          path: .
        continue-on-error: true

      - name: Fallback via gh (previous successful runs)
        if: always()
        shell: bash
        run: "ID='${{ inputs.series_id }}'; ls *\"${ID}\"*.zip >/dev/null 2>&1 && echo 'ZIP already present' || (echo 'searching previous runs'; for RUN in $(gh run list -L 30 --json databaseId,conclusion -q '.[] | select(.conclusion==\"success\") | .databaseId'); do gh run download \"$RUN\" --name \"koubei_story_and_reports_${ID}\" --repo \"$GITHUB_REPOSITORY\" --dir . || true; gh run download \"$RUN\" --name \"autohome_reviews_${ID}\" --repo \"$GITHUB_REPOSITORY\" --dir . || true; ls *\"${ID}\"*.zip >/dev/null 2>&1 && echo \"downloaded from run $RUN\" && break; done)"

      - name: Use provided zip_path if any
        if: ${{ inputs.zip_path != '' }}
        run: "test -s '${{ inputs.zip_path }}' && cp -f '${{ inputs.zip_path }}' ."

      - name: Detect ZIP
        id: detect
        shell: bash
        run: "ID='${{ inputs.series_id }}'; ZIP=''; C1=\"koubei_story_and_reports_${ID}.zip\"; C2=\"autohome_reviews_${ID}.zip\"; [ -s \"$C1\" ] && ZIP=\"$C1\"; [ -z \"$ZIP\" ] && [ -s \"$C2\" ] && ZIP=\"$C2\"; [ -z \"$ZIP\" ] && ZIP=$(ls *\"${ID}\"*.zip 2>/dev/null | head -n1 || true); if [ -z \"$ZIP\" ]; then echo 'zip=' >> $GITHUB_OUTPUT; echo 'REFETCH=1' >> $GITHUB_OUTPUT; if [ '${{ inputs.allow_refetch }}' != 'true' ]; then echo 'No zip found'; exit 1; fi; else echo \"zip=$ZIP\" >> $GITHUB_OUTPUT; fi"

      - name: Refetch details and build ZIP
        if: ${{ steps.detect.outputs.REFETCH == '1' }}
        run: "python tools/koubei_summary_playwright.py '${{ inputs.series_id }}' '5'"

      - name: Build CSV from JSON ZIP
        env:
          DETECTED_ZIP: ${{ steps.detect.outputs.zip }}
        run: "Z=\"$DETECTED_ZIP\"; if [ -z \"$Z\" ]; then Z='autohome_reviews_${{ inputs.series_id }}.zip'; fi; python tools/koubei_summary_to_csv.py \"$Z\""

      - name: Generate story (use koubei_storywriter.py as-is)
        run: "python tools/koubei_storywriter.py '${{ inputs.series_id }}'"

      - name: Upload CSV
        uses: actions/upload-artifact@v4
        with:
          name: koubei_story_${{ inputs.series_id }}_csv
          path: autohome_reviews_${{ inputs.series_id }}.csv

      - name: Upload story TXT
        uses: actions/upload-artifact@v4
        with:
          name: koubei_story_${{ inputs.series_id }}_txt
          path: autohome_reviews_${{ inputs.series_id }}_story.txt

      - name: Upload story MD
        uses: actions/upload-artifact@v4
        with:
          name: koubei_story_${{ inputs.series_id }}_md
          path: autohome_reviews_${{ inputs.series_id }}_story.md
