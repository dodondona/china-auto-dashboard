name: autohome_config_test

on:
  workflow_dispatch:
    inputs:
      series_ids:
        description: "Series IDs separated by comma/space (e.g. 5714,7578 6337)"
        required: true
        type: string
      exrate_cny_to_jpy:
        description: "CNY->JPY rate for translation (optional, e.g. 21.0)"
        required: false
        type: string

jobs:
  prepare_series_matrix:
    runs-on: ubuntu-latest
    outputs:
      series: ${{ steps.build.outputs.series }}
    steps:
      - name: Build JSON matrix from input
        id: build
        run: |
          set -euo pipefail
          RAW="${{ github.event.inputs.series_ids }}"
          # split by comma/space, keep only digits, uniq
          LIST=$(printf "%s\n" "$RAW" | tr ',\n' '  ' | awk '{for(i=1;i<=NF;i++) print $i}' | sed 's/[^0-9]//g' | awk 'NF>0' | sort -u)
          # to JSON array
          JSON="["; first=1
          for id in $LIST; do
            if [ $first -eq 1 ]; then JSON="${JSON}\"$id\""; first=0; else JSON="${JSON},\"$id\""; fi
          done
          JSON="${JSON}]"
          echo "series=$JSON" >> "$GITHUB_OUTPUT"

  run_config_and_translate:
    needs: prepare_series_matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        series: ${{ fromJSON(needs.prepare_series_matrix.outputs.series) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install playwright beautifulsoup4 pandas openai
          python -m playwright install chromium

      - name: Run config crawler
        run: |
          set -euo pipefail
          mkdir -p "output/autohome/${{ matrix.series }}"
          echo "Processing series: ${{ matrix.series }}"
          python tools/autohome_config_to_csv.py --series "${{ matrix.series }}" || echo "No config found for ${{ matrix.series }}"
          ls -R output || true

      - name: Translate columns (per series)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          EXRATE_CNY_TO_JPY: ${{ github.event.inputs.exrate_cny_to_jpy }}
        run: |
          set -euo pipefail
          IN="output/autohome/${{ matrix.series }}/config_${{ matrix.series }}.csv"
          OUT="output/autohome/${{ matrix.series }}/config_${{ matrix.series }}.ja.csv"
          if [ -s "$IN" ]; then
            export CSV_IN="$IN"
            export CSV_OUT="$OUT"
            python tools/translate_columns.py
          - name: Upload repo cache (CN/JA)
            uses: actions/upload-artifact@v4
            with:
              name: repo-cache-${{ matrix.series }}
              path: cache_repo/series/${{ matrix.series }}/
              if-no-files-found: warn

          - name: Commit repo cache (CN/JA)
            run: |
              set -e
              git config user.name  "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git add cache_repo/series/${{ matrix.series }}/cn.csv || true
              git add cache_repo/series/${{ matrix.series }}/ja.csv || true
              git commit -m "cache_repo update: series ${{ matrix.series }}" || echo "No changes to commit"
              git push || echo "No changes to push"

          else
            echo "Skip translate: $IN not found."
          fi

      - name: Upload artifact (per series)
        uses: actions/upload-artifact@v4
        with:
          name: autohome-config-test-${{ matrix.series }}
          path: |
            output/autohome/${{ matrix.series }}/config_${{ matrix.series }}.csv
            output/autohome/${{ matrix.series }}/config_${{ matrix.series }}.ja.csv
          if-no-files-found: warn
