name: autohome_notify

on:
  schedule:
    - cron: "20 9 11 * *"  # 毎月11日 09:20 UTC（中国時間17:20頃）
  workflow_dispatch:

jobs:
  detect_and_notify:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai
      TARGET_URL: "https://www.autohome.com.cn/rank/1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install -U pip playwright
          python -m playwright install chromium
          python -m playwright install-deps

      # ====== スクレイピング（既存Stage1/Stage2利用） ======
      - name: Run scraper
        run: |
          mkdir -p data
          python tools/rank1_stage1_ranklist.py --url "${TARGET_URL}" --out "data/autohome_raw_latest.csv"
          python tools/rank1_stage2_enrich.py --inp "data/autohome_raw_latest.csv" --out "data/autohome_raw_latest_enriched.csv"

      # ====== ハッシュ比較 ======
      - name: Compare hash
        id: check
        run: |
          md5sum data/autohome_raw_latest_enriched.csv > new_hash.txt
          if [ -f data/last_hash.txt ]; then
            diff data/last_hash.txt new_hash.txt && echo "changed=false" >> $GITHUB_OUTPUT || echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Save hash
        if: always()
        run: cp new_hash.txt data/last_hash.txt

      # ====== 通知（GitHub Actions標準メール） ======
      - name: Notify if changed
        if: ${{ steps.check.outputs.changed == 'true' }}
        uses: actions/github-script@v7
        with:
          script: |
            const msg = `
📊 **Autohomeランキングが更新されました**

URL: ${process.env.TARGET_URL}
日時: ${new Date().toLocaleString("zh-CN", { timeZone: "Asia/Shanghai" })}
ファイル: data/autohome_raw_latest_enriched.csv

→ GitHub上でこのActions runを確認してください。
`;
            core.notice(msg);
            core.summary.addHeading("Autohomeランキング更新通知");
            core.summary.addCodeBlock(msg);
            await core.summary.write();
