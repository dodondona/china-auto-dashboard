name: autohome_pipeline_to_koubei

on:
  workflow_run:
    workflows: ["autohome_pipeline"]
    types: [completed]

jobs:
  prepare_series_from_pipeline:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      series: ${{ steps.mkjson.outputs.series }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tools (jq, unzip, curl)
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y jq unzip curl

      # config_to_csv と同じく、artifactが確定するまで少し待つ（必要に応じて調整）
      - name: Wait for upstream artifacts to be ready
        run: |
          echo "Waiting 60 seconds for autohome-series-urls to finalize..."
          sleep 60

      # 上流ラン（このトリガの run-id）の artifacts から autohome-series-urls を取得
      - name: Download artifact (autohome-series-urls)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          run_id="${{ github.event.workflow_run.id }}"
          api="https://api.github.com/repos/${{ github.repository }}/actions/runs/${run_id}/artifacts"
          curl -sSL -H "Authorization: Bearer $GH_TOKEN" -H "X-GitHub-Api-Version: 2022-11-28" "$api" > artifacts.json
          url=$(jq -r '.artifacts[] | select(.name=="autohome-series-urls") | .archive_download_url' artifacts.json)
          test -n "$url"
          curl -sSL -H "Authorization: Bearer $GH_TOKEN" -L "$url" -o series_artifact.zip
          mkdir -p artifact && unzip -o series_artifact.zip -d artifact
          ls -la artifact || true

      # JSON配列（["4745","7806",...]）を作る
      - id: mkjson
        name: Build matrix
        run: |
          set -euo pipefail
          # 優先: series_ids.txt（config_to_csv 用と同じフォーマット）
          if [ -s artifact/series_ids.txt ]; then
            src="artifact/series_ids.txt"
          else
            # 代替: URL列からID抽出（autohome_config_to_csv 用URLでも「/series/4745.html」等から数字だけ抜く）
            # artifact直下のcsv/jsonlから拾う（必要に応じてパターン追加）
            : > /tmp/series_ids.tmp
            if compgen -G "artifact/*.csv" > /dev/null; then
              grep -rhoE '/series/[0-9]+\.html' artifact/*.csv 2>/dev/null | grep -oE '[0-9]+' >> /tmp/series_ids.tmp || true
              grep -rhoE 'https?://k\.autohome\.com\.cn/[0-9]+' artifact/*.csv 2>/dev/null | grep -oE '[0-9]+' >> /tmp/series_ids.tmp || true
            fi
            if compgen -G "artifact/*.jsonl" > /dev/null; then
              grep -rhoE '/series/[0-9]+\.html' artifact/*.jsonl 2>/dev/null | grep -oE '[0-9]+' >> /tmp/series_ids.tmp || true
              grep -rhoE 'https?://k\.autohome\.com\.cn/[0-9]+' artifact/*.jsonl 2>/dev/null | grep -oE '[0-9]+' >> /tmp/series_ids.tmp || true
              grep -rhoE '"series_id"\s*:\s*[0-9]+' artifact/*.jsonl 2>/dev/null | grep -oE '[0-9]+' >> /tmp/series_ids.tmp || true
            fi
            if [ ! -s /tmp/series_ids.tmp ]; then
              echo "::error::No series IDs were found in autohome-series-urls artifact."
              exit 1
            fi
            sort -u /tmp/series_ids.tmp > artifact/series_ids.txt
            src="artifact/series_ids.txt"
          fi

          echo "Top of series IDs:"
          head -n 10 "$src" || true

          # 必要なら上限（例: 100件）を調整
          json=$(awk 'NF>0' "$src" | sed 's/[^0-9]//g' | awk 'NF>0' | jq -R -s -c 'split("\n")|map(select(length>0))')
          echo "series=$json" >> "$GITHUB_OUTPUT"

  # ここから各IDで koubei を回す
  koubei_from_pipeline:
    needs: prepare_series_from_pipeline
    if: ${{ needs.prepare_series_from_pipeline.outputs.series != '' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        series: ${{ fromJSON(needs.prepare_series_from_pipeline.outputs.series) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install -U pip
          pip install playwright openai==1.* beautifulsoup4 requests pandas
          python -m playwright install chromium
          pip install -r requirements.txt || true

      # ここが相違点：“k.autohome.com.cn/{車両ID}#pvareaid=3454440” で処理（スクリプト内で組み立ててもOK）
      - name: Run koubei summary (playwright)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -euo pipefail
          vid="${{ matrix.series }}"
          echo "Processing vehicle ID: ${vid}"
          # 既存スクリプトがID引数でURLを組み立てる想定（https://k.autohome.com.cn/${vid}#pvareaid=3454440）
          python tools/koubei_summary_playwright.py "${vid}" "5" || echo "No reviews or fetch error for ${vid}"

      - name: Upload artifact (koubei summary)
        uses: actions/upload-artifact@v4
        with:
          name: koubei-summary
          path: |
            autohome_reviews_*.csv
            autohome_reviews_*.txt
            autohome_reviews_*.md
            autohome_reviews_*.json
          if-no-files-found: warn
