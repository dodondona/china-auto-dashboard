permissions:
  actions: read

name: autohome_config_to_csv

on:
  workflow_dispatch:
  schedule:
    - cron: "15 1 * * *"  # every day at 01:15 UTC
  workflow_run:
    workflows: ["autohome_pipeline"]
    types: [completed]
    - cron: "15 1 * * *"  # every day at 01:15 UTC

jobs:
  autohome_config_to_csv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install playwright
          python -m playwright install chromium
          pip install beautifulsoup4 pandas openai requests

      # 必要なシリーズを両方生成（translate_columns.py の既定=7578に合わせるため）
      - name: Run autohome_config_to_csv.py (7806)
        run: |
          python tools/autohome_config_to_csv.py --series 7806

      - name: Run autohome_config_to_csv.py (7578)
        run: |
          python tools/autohome_config_to_csv.py --series 7578

      # 翻訳（既定挙動＝7578を読む実装に合わせ、引数は渡さない）
      - name: Translate columns to Japanese (default behavior)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          
      # === 新規追加: autohome_pipeline の成果物 (series_list.csv) を受け取り ===
      - name: Download series_list.csv from autohome_pipeline (if triggered by workflow_run)
        if: ${{ github.event_name == 'workflow_run' }}
        uses: actions/download-artifact@v4
        with:
          name: autohome-series-list
          path: public
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # === 新規追加: フォールバック（手動/スケジュール起動で artifact が無い場合に作る）===
      - name: Fallback: build series_list.csv from live ranking page (top 100)
        if: ${{ !exists('public/series_list.csv') }}
        run: |
          python - <<'PY'
          import re,csv,sys,requests,os
          headers = {
              "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122 Safari/537.36",
              "Accept-Language":"zh-CN,zh;q=0.9,en;q=0.8",
              "Referer":"https://www.autohome.com.cn/rank/1"
          }
          try:
              html = requests.get("https://www.autohome.com.cn/rank/1", headers=headers, timeout=30).text
          except Exception as e:
              print("Fallback fetch failed:", e, file=sys.stderr)
              html = ""
          ids = re.findall(r'https?://www\.autohome\.com\.cn/(\d+)', html)
          seen=set(); uniq=[]
          for sid in ids:
              if sid not in seen:
                  seen.add(sid); uniq.append(sid)
          uniq = sorted(uniq, key=lambda x:int(x))[:100]
          os.makedirs("public", exist_ok=True)
          with open('public/series_list.csv','w', newline='', encoding='utf-8') as f:
              w=csv.writer(f); w.writerow(['series_id','series_url','config_url'])
              for sid in uniq:
                  w.writerow([sid, f'https://www.autohome.com.cn/{sid}',
                                   f'https://www.autohome.com.cn/config/series/{sid}.html#pvareaid=3454437'])
          print(f'Fallback wrote {len(uniq)} rows to public/series_list.csv')
          PY

      # === 新規追加: series_list.csv をループして既存スクリプトを叩く（各車種CSV生成）===
      - name: Run autohome_config_to_csv.py for top 100 series
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -euo pipefail
          while IFS=, read -r sid surl curl; do
            if [ "$sid" = "series_id" ] || [ -z "${sid:-}" ]; then continue; fi
            echo "::group::Config scrape for series $sid"
            python tools/autohome_config_to_csv.py "${curl}"
            echo "::endgroup::"
          done < public/series_list.csv
          python tools/translate_columns.py

      # 生成物をまとめてアップロード
      - name: Upload artifact (config csvs)
        uses: actions/upload-artifact@v4
        with:
          name: autohome-config-csv
          path: |
            output/autohome/*/config_*.csv
            output/autohome/*/config_*.ja.csv
          if-no-files-found: warn
