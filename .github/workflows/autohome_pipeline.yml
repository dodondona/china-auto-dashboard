name: autohome_pipeline

on:
  workflow_dispatch:
  schedule:
    - cron: "15 1 2 * *"  # 毎月2日のUTC 01:15

jobs:
  autohome_pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 必要フォント（中国語スクショ対策／既存スクリプトに影響なし）
      - name: Install CJK fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            fonts-noto-cjk fonts-noto-cjk-extra \
            fonts-wqy-zenhei fonts-wqy-microhei \
            fonts-noto-color-emoji
          fc-cache -f -v

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install playwright pandas beautifulsoup4 lxml requests
          fi
          python -m playwright install chromium

      # ▼▼▼ ここまで既存と同等。以降、既存処理（ランキング生成等）はそのまま ▼▼▼

      # 既存：ランキング＋画像URL抽出（あなたの現行スクリプト名に合わせてください）
      # 例）tools/rank_capture_images_and_csv.py が public/autohome_ranking_with_image_urls.csv を出力
      - name: Build ranking + image URLs CSV (top100)
        run: |
          python tools/rank_capture_images_and_csv.py

      - name: Upload artifact (ranking CSVs)
        uses: actions/upload-artifact@v4
        with:
          name: autohome-ranking-csvs
          path: |
            public/*.csv
          if-no-files-found: error

      # ▼▼▼ 連結その1：ランキングCSVから series_id 抽出 → configURL 作成 → アーティファクト化 ▼▼▼
      - name: Build spec links from ranking (top100)
        run: |
          python - <<'PY'
import csv, re, sys, pathlib
infile = pathlib.Path("public/autohome_ranking_with_image_urls.csv")
rows = list(csv.DictReader(infile.open(encoding="utf-8-sig")))
ids = []
with open("spec_links.csv","w",encoding="utf-8") as w:
    w.write("series_id,config_url\n")
    for r in rows[:100]:
        href = (r.get("link","") or "").strip()
        m = re.search(r"/(\d{3,6})/?$", href)
        if not m:
            continue
        sid = m.group(1)
        ids.append(sid)
        w.write(f"{sid},https://www.autohome.com.cn/config/series/{sid}.html#pvareaid=3454437\n")
pathlib.Path("spec_series_ids.txt").write_text("\n".join(ids), encoding="utf-8")
if not ids:
    print("No series ids extracted from ranking CSV", file=sys.stderr)
    sys.exit(1)
print(f"Extracted {len(ids)} series ids", file=sys.stderr)
PY

      - name: Upload artifact (spec series ids)
        uses: actions/upload-artifact@v4
        with:
          name: autohome-spec-series-ids
          path: |
            spec_series_ids.txt
            spec_links.csv
          if-no-files-found: error
