name: autohome_config_to_csv

on:
  workflow_dispatch:
  schedule:
    - cron: "15 2 * * *"
  workflow_run:
    workflows: ["autohome_pipeline"]
    types: [completed]

jobs:
  autohome_config_to_csv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install playwright
          python -m playwright install chromium

      # === ここから追記: 直前の autohome_pipeline ランの specリンクCSV を取得 ===
      - name: Download spec_links.csv artifact from previous workflow run
        if: ${{ github.event_name == 'workflow_run' }}
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: autohome_pipeline.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: autohome-spec-links
          path: spec_inputs

      - name: Download latest spec_links.csv artifact (fallback for manual/schedule)
        if: ${{ github.event_name != 'workflow_run' }}
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: autohome_pipeline.yml
          branch: ${{ github.ref_name }}
          name: autohome-spec-links
          path: spec_inputs
      # === 追記ここまで ===

      - name: Verify input file
        run: |
          ls -lh spec_inputs || true
          cat spec_inputs/spec_links.csv | head || true

      # === ここから追記: spec_links.csv を読み、各 series_id で CSV 化 ===
      - name: Run autohome_config_to_csv.py for Top100 series
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -euo pipefail
          CSV="spec_inputs/spec_links.csv"
          test -s "$CSV" || { echo "spec_links.csv not found"; exit 1; }
          echo "Start processing spec tables from $CSV"
          tail -n +2 "$CSV" | cut -d',' -f1 | while read -r SID; do
            SID_TRIM="${SID%%[$'\r\n']}"
            if [ -z "$SID_TRIM" ]; then continue; fi
            echo "=== series $SID_TRIM ==="
            python tools/autohome_config_to_csv.py --series "$SID_TRIM"
          done
      # === 追記ここまで ===

      - name: Upload all generated spec CSVs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: autohome-config-csvs
          path: |
            output/**/*.csv
            public/**/*.csv
          if-no-files-found: ignore
