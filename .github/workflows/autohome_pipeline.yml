name: autohome_pipeline

on:
  workflow_dispatch:
  # 必要ならスケジュールも残せる
  # schedule:
  #   - cron: "25 1 2 * *"

jobs:
  # === Job A: spec_links を作る（あなたの既存ステップをここに） ===
  build_spec_links:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # ここに「rank/画像収集 or spec_links 生成」の既存ステップをそのまま移植
      # 例：
      # - name: Build spec_links.jsonl
      #   run: |
      #     python tools/your_script_builds_spec_links.py > spec_links.jsonl

      # 生成物を次ジョブに渡すために artifact 化
      - name: Upload spec_links.jsonl
        uses: actions/upload-artifact@v4
        with:
          name: spec_links
          path: spec_links.jsonl
          if-no-files-found: error

  # === Job B: spec_links を使って翻訳付き config CSV を作る ===
  from_spec_links_to_config:
    needs: build_spec_links            # ← これで必ず Job A の後に走る（発火漏れなし）
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # ★最小必須：Playwright + OpenAI をインストール
      - name: Install deps (Playwright + OpenAI)
        run: |
          python -m pip install --upgrade pip
          pip install "openai>=1.40,<2" playwright
          python -m playwright install chromium
          python -c "import openai; print('openai version:', openai.__version__)"

      - name: Download spec_links artifact
        uses: actions/download-artifact@v4
        with:
          name: spec_links
          path: .

      - name: Prepare output dir
        run: mkdir -p public/config_csv

      - name: Run autohome_config_to_csv per link (翻訳あり)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -eux
          test -s spec_links.jsonl
          cat spec_links.jsonl | jq -c '.[]' | while read -r line; do
            rank=$(echo "$line" | jq -r .rank)
            series_id=$(echo "$line" | jq -r .series_id)
            spec_url=$(echo "$line" | jq -r .spec_url)
            printf -v rank3 "%03d" "$rank"
            echo "::group::[${rank3}] ${series_id} -> ${spec_url}"
            python tools/autohome_config_to_csv.py --series "${series_id}"
            echo "::endgroup::"
          done

      - name: Upload config CSVs
        uses: actions/upload-artifact@v4
        with:
          name: autohome-config-csvs
          path: public/config_csv
          if-no-files-found: error
