name: autohome_pipeline

on:
  workflow_dispatch:
  schedule:
    - cron: "30 1 * * *"

jobs:
  build_autohome_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install playwright
          python -m playwright install chromium

      - name: Build ranking (Top100)
        run: |
          set -eux
          python tools/rank_capture_images_and_csv.py

      - name: Upload artifact (ranking csv)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: autohome-ranking-csvs
          path: public/autohome_ranking_with_image_urls.csv
          if-no-files-found: error

      - name: Build spec_links.csv from ranking CSV
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          SRC="public/autohome_ranking_with_image_urls.csv"
          OUT="public/spec_links.csv"
          test -s "$SRC" || { echo "missing $SRC"; exit 1; }

          echo 'import csv, re'            > build_spec_links.py
          echo 'pat=re.compile(r"https?://www\\.autohome\\.com\\.cn/(\\d+)")' >> build_spec_links.py
          echo 'with open("public/autohome_ranking_with_image_urls.csv",encoding="utf-8") as f, open("public/spec_links.csv","w",encoding="utf-8",newline="") as g:' >> build_spec_links.py
          echo '    r=csv.DictReader(f)'  >> build_spec_links.py
          echo '    w=csv.writer(g)'      >> build_spec_links.py
          echo '    w.writerow(["series_id","spec_url"])' >> build_spec_links.py
          echo '    for row in r:'        >> build_spec_links.py
          echo '        link=(row.get("link","") or "").strip()' >> build_spec_links.py
          echo '        m=pat.match(link)' >> build_spec_links.py
          echo '        if not m: continue' >> build_spec_links.py
          echo '        sid=m.group(1)'   >> build_spec_links.py
          echo '        w.writerow([sid,f"https://www.autohome.com.cn/config/series/{sid}.html#pvareaid=3454437"])' >> build_spec_links.py

          python build_spec_links.py
          rm -f build_spec_links.py
          ls -lh public/spec_links.csv

      - name: Upload artifact (spec links)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: autohome-spec-links
          path: public/spec_links.csv
          if-no-files-found: error
