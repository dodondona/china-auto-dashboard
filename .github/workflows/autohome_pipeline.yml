name: autohome_pipeline

on:
  workflow_dispatch:
  schedule:
    - cron: "15 1 2 * *"  # monthly at 01:15 UTC on the 2nd

jobs:
  autohome_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install CJK fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            fonts-noto-cjk fonts-noto-cjk-extra \
            fonts-wqy-zenhei fonts-wqy-microhei \
            fonts-noto-color-emoji
          fc-cache -f -v

      - name: Install Playwright
        run: |
          python -m pip install --upgrade pip
          pip install playwright
          python -m playwright install chromium

      # ----------------------------------------------------
      # ここまではあなたの既存ステップ（画像収集・ランキング収集など）
      # 既存の Run/Upload などが続いているはずですが、
      # そちらは絶対に変更しないでください。
      # ----------------------------------------------------

      # === 追加1: ランキングCSVから series_list.csv を生成（上位100件）===
      - name: Build series_list.csv (top 100)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p public
          tmp_ids="$(mktemp)"
          # public/*.csv 内の autohome 直リンクから /数字 を抽出し ID 化
          grep -Eho 'https?://www\.autohome\.com\.cn/[0-9]+' public/*.csv | sed 's#.*/##' \
            | sort -n | uniq | head -100 > "$tmp_ids"
          # ヘッダ + 3列 series_id, series_url, config_url を生成
          {
            echo 'series_id,series_url,config_url'
            awk '{printf "%s,https://www.autohome.com.cn/%s,https://www.autohome.com.cn/config/series/%s.html#pvareaid=3454437\n",$1,$1,$1}' "$tmp_ids"
          } > public/series_list.csv
          rm -f "$tmp_ids"
          test -s public/series_list.csv
          echo "Wrote series_list.csv:"
          head -3 public/series_list.csv || true

      # === 追加2: 各IDのスペック表CSVを、既存 tools/autohome_config_to_csv.py で生成 ===
      - name: Build config CSVs for each series (top 100)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        shell: bash
        run: |
          set -euo pipefail
          tail -n +2 public/series_list.csv | while IFS=, read -r sid surl curl; do
            [ -z "${sid:-}" ] && continue
            echo "::group::Config scrape for series $sid"
            python tools/autohome_config_to_csv.py "$curl"
            echo "::endgroup::"
          done

      # === 追加3: 生成されたスペックCSVと series_list.csv をアップロード（既存に追加）===
      - name: Upload artifact (config CSVs)
        uses: actions/upload-artifact@v4
        with:
          name: autohome-config-csvs
          path: |
            output/**/*.csv
            public/series_list.csv
          if-no-files-found: warn
