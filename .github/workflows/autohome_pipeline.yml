name: autohome_pipeline

on:
  workflow_dispatch:
  schedule:
    - cron: "10 1 3 * *"  # monthly at 01:10 UTC on the 3rd

jobs:
  autohome_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install playwright openai pandas beautifulsoup4 requests
          python -m playwright install chromium

      - name: Run stage scripts (ranking)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -euo pipefail
          # 1) ランキング + 画像URL抽出（出力: public/autohome_ranking_with_image_urls.csv）
          python tools/rank_capture_images_and_csv.py
          # 2) タイトルからメーカー名を付与（出力: public/autohome_ranking_with_image_urls_with_maker.csv）
          python tools/stage_add_manufacturer_from_title.py public/autohome_ranking_with_image_urls.csv
          # 3) メーカー名を日本語へ翻訳（出力: public/autohome_ranking_with_image_urls_with_maker_with_maker_ja.csv）
          python tools/stage_translate_maker_to_ja.py public/autohome_ranking_with_image_urls_with_maker.csv

      - name: Upload artifact (ranking csv)
        uses: actions/upload-artifact@v4
        with:
          name: autohome-ranking-csvs
          path: |
            public/autohome_ranking_with_image_urls_with_maker_with_maker_ja.csv
          if-no-files-found: warn

      # ===== ここから“連結”のための最小追加（CSV→series_id抽出）=====
      - name: Build series ids & config links (top100)
        run: |
          set -euo pipefail
          mkdir -p artifact
          csv="public/autohome_ranking_with_image_urls.csv"
          if [ ! -s "$csv" ]; then
            echo "missing: $csv" >&2
            exit 1
          fi
          : > artifact/series_ids.txt
          printf 'series_id,series_url,config_url\n' > artifact/series_urls.csv

          # ヘッダから link or series_url の列番号を取得して抽出（重複排除・先頭100件）
          awk -F',' '
            NR==1{
              for(i=1;i<=NF;i++){
                col=$i; gsub(/^"|"$/, "", col)
                if(col=="link")      lc=i
                if(col=="series_url") sc=i
              }
              next
            }
            {
              col = (lc?lc:sc)
              if(!col) next
              url = $col
              gsub(/^"|"$/, "", url)
              if (match(url,/[0-9]{3,7}/,m)) {
                sid=m[0]
                if(!(sid in seen)){
                  seen[sid]=1
                  print sid >> "artifact/series_ids.txt"
                  printf "%s,https://www.autohome.com.cn/%s,https://www.autohome.com.cn/config/series/%s.html#pvareaid=3454437\n", sid, sid, sid >> "artifact/series_urls.csv"
                  n++
                  if(n==100) exit
                }
              }
            }
          ' "$csv"

      - name: Upload artifact (series ids & urls)
        uses: actions/upload-artifact@v4
        with:
          name: autohome-series-urls
          path: artifact/
          if-no-files-found: error
      # ===== “連結”追加ここまで =====

      # 画像は別アーティファクトで。保存先は stage2 スクリプト既定の出力パスに合わせています。
      # （典型的には public/images/** または public/autohome_images/** など。既定出力に追従できるよう広めに指定）
      - name: Upload artifact (ranking images)
        uses: actions/upload-artifact@v4
        with:
          name: autohome-ranking-images
          path: |
            public/**/*.jpg
            public/**/*.jpeg
            public/**/*.png
          if-no-files-found: warn
