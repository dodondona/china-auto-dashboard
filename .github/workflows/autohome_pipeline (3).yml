name: autohome_pipeline

on:
  workflow_dispatch:
  schedule:
    - cron: "15 1 2 * *"  # monthly at 01:15 UTC on the 2nd

jobs:
  autohome_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install CJK fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            fonts-noto-cjk fonts-noto-cjk-extra \
            fonts-wqy-zenhei fonts-wqy-microhei \
            fonts-noto-color-emoji
          fc-cache -f -v

      - name: Install Playwright
        run: |
          python -m pip install --upgrade pip
          pip install playwright
          python -m playwright install chromium

      # =====================================================
      # ここから下は、あなたの既存処理（画像収集・ランキング収集など）
      # これまで通りのステップをすべて維持
      # =====================================================

      - name: Run Stage1 (ranking + image capture)
        run: |
          python tools/rank_capture_images_and_csv.py

      - name: Upload artifact (ranking result)
        uses: actions/upload-artifact@v4
        with:
          name: autohome-ranking
          path: public/autohome_ranking_with_image_urls.csv

      # =====================================================
      # ここからが追加部分（スペック表自動生成）
      # =====================================================

      - name: Build series_list.csv (top 100)
        run: |
          mkdir -p public
          cat > build_series_list.py <<'EOF'
import re,csv,glob,os
os.makedirs("public", exist_ok=True)
ids=set()
for path in glob.glob("public/*.csv"):
    with open(path, "r", encoding="utf-8", errors="ignore") as f:
        for line in f:
            for m in re.finditer(r"https?://www\.autohome\.com\.cn/(\d+)", line):
                ids.add(m.group(1))
ids = sorted(ids, key=lambda x:int(x))[:100]
with open("public/series_list.csv","w",newline="",encoding="utf-8") as f:
    w=csv.writer(f)
    w.writerow(["series_id","series_url","config_url"])
    for sid in ids:
        w.writerow([sid,
                    f"https://www.autohome.com.cn/{sid}",
                    f"https://www.autohome.com.cn/config/series/{sid}.html#pvareaid=3454437"])
print("Wrote", len(ids), "rows to public/series_list.csv")
EOF
          python build_series_list.py

      - name: Build config CSVs for each series (top 100)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -e
          test -f public/series_list.csv
          tail -n +2 public/series_list.csv | while IFS=, read -r sid surl curl; do
            [ -z "$sid" ] && continue
            echo "::group::Config scrape for series $sid"
            python tools/autohome_config_to_csv.py "$curl"
            echo "::endgroup::"
          done

      - name: Upload artifact (config CSVs)
        uses: actions/upload-artifact@v4
        with:
          name: autohome-config-csvs
          path: |
            output/**/*.csv
            public/series_list.csv
          if-no-files-found: warn
