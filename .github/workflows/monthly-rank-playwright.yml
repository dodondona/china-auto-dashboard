name: Monthly append series_url & enrich brand/series (rank/1 + global translation)

on:
  workflow_dispatch:
  schedule:
    - cron: "15 1 2 * *"  # 毎月2日 10:15 JST 実行

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (pin to same interpreter)
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt || true
          python -m pip install pandas unidecode opencc-python-reimplemented playwright beautifulsoup4 requests lxml
          python -m playwright install chromium

      - name: Install CJK fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-noto-cjk

      - name: Resolve month & paths
        shell: bash
        run: |
          # 先月のYYYY-MMを計算（手動で当月にしたい場合はここを書き換え）
          PYTHONIOENCODING=utf-8 python - <<'PY' >> $GITHUB_ENV
import datetime, os
today = datetime.date.today()
first = today.replace(day=1)
last_month_last_day = first - datetime.timedelta(days=1)
ym = last_month_last_day.strftime("%Y-%m")
print(f"YM={ym}")
PY
          echo "RAW=data/autohome_raw_${YM}.csv"            >> $GITHUB_ENV
          echo "SERIES=data/autohome_raw_${YM}_with_series.csv" >> $GITHUB_ENV
          echo "BRAND=data/autohome_raw_${YM}_with_brand.csv"   >> $GITHUB_ENV

      - name: Show env
        run: |
          echo "YM=$YM"
          echo "RAW=$RAW"
          echo "SERIES=$SERIES"
          echo "BRAND=$BRAND"

      - name: Append series_url from /rank/1 (Playwright infinite scroll)
        run: |
          python tools/append_series_url_from_web.playwright_full.py \
            --input "$RAW" \
            --output "$SERIES"

      - name: Enrich brand/model from <title> via rules/LLM
        run: |
          python tools/enrich_brand_from_title.py \
            --input "$SERIES" \
            --output "$BRAND"

      - name: Translate brand/model to Japanese (global-first mapping)
        run: |
          python tools/translate_brand_model_ja.py \
            --inp data \
            --pattern "autohome_raw_${YM}_with_brand.csv" \
            --out-suffix "_ja"

      - name: List outputs before commit
        run: |
          ls -lh data | tail -n 50 || true

      - name: Commit artifacts
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "auto: append + enrich + translate (global rule) for $YM [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi
