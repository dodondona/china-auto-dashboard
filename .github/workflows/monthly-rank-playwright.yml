name: run

on:
  workflow_dispatch:
  push:
    paths:
      - "data/**.csv"
      - "tools/**.py"
      - ".github/workflows/run.yml"

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      # どれか未設定でもジョブが落ちないようにする（official はキーがある時だけ実行）
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_MODEL: gpt-4o-mini
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      GOOGLE_CSE_ID: ${{ secrets.GOOGLE_CSE_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          # requirements.txt が無くても動くように最低限を直接入れる
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas requests beautifulsoup4 lxml wikipedia-api openai
          fi

      # 1) /rank/ から series_url を付与（必須引数 --input を渡す）
      - name: Append series_url from /rank/
        run: |
          set -euo pipefail
          shopt -s nullglob
          for f in data/autohome_raw_*.csv; do
            # すでに _with_series.csv があればスキップしてもOK。ここは常に上書きにしています。
            out="${f%.csv}_with_series.csv"
            echo ">> append_series_url_from_web.force_dom.py --input ${f} --output ${out}"
            python tools/append_series_url_from_web.force_dom.py \
              --input "${f}" \
              --output "${out}" \
              --name-col model \
              --max-rounds 100 \
              --idle-ms 300
          done

      # 2) <title> から brand/model を正規化（従来のあなたのスクリプトを呼び出し）
      - name: Enrich brand/model from <title>
        run: |
          set -euo pipefail
          shopt -s nullglob
          for f in data/*_with_series.csv; do
            out="${f%_with_series.csv}_with_brand.csv"
            echo ">> enrich_brand_model_from_title.py --input ${f} --output ${out}"
            python tools/enrich_brand_model_from_title.py \
              --input "${f}" \
              --output "${out}"
          done

      # 3) 公式 → Wikipedia → LLM の順で英名確定（キャッシュなし）
      - name: Translate brand/model to global names (Official → Wikipedia → LLM; no cache)
        run: |
          set -euo pipefail
          shopt -s nullglob
          for f in data/*_with_brand.csv; do
            out="${f%_with_brand.csv}_with_brand_ja.csv"
            echo ">> official_wiki_llm_translate.py --input ${f} --output ${out}"
            python tools/official_wiki_llm_translate.py \
              --input "${f}" \
              --output "${out}" \
              --brand-col brand \
              --model-col model \
              --brand-ja-col brand_ja \
              --model-ja-col model_ja \
              --use-official \
              --use-wikipedia \
              --use-llm \
              --sleep 0
          done

      - name: List outputs before commit
        run: |
          set -euo pipefail
          ls -lh data | tail -n 200 || true

      - name: Commit artifacts
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "auto: append + enrich + Official→Wikipedia→LLM translate (no cache)"
            git push
          else
            echo "No changes to commit."
          fi
