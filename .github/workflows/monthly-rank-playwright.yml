name: Monthly append series_url & enrich brand/series (rank/1 + LLM global translation)

on:
  workflow_dispatch:
  schedule:
    - cron: "15 1 2 * *"  # 毎月2日 10:15 JST

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Python
        uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      # --- ここから変更 ---
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          # requirements.txtから一旦Geminiライブラリを分離し、個別に最新版をインストール
          python -m pip install -r requirements.txt
          python -m pip install --upgrade "google-generativeai>=0.8.0" playwright beautifulsoup4 requests lxml regex
          python -m playwright install chromium
          sudo apt-get update && sudo apt-get install -y fonts-noto-cjk

      - name: Debug google-generativeai version
        run: |
          echo "Checking installed google-generativeai version..."
          python -c "import google.generativeai; print(f'google-generativeai version: {google.generativeai.__version__}')"
      # --- ここまで変更 ---

      - name: Append series_url from /rank/1
        run: |
          python tools/append_series_url_from_web.playwright_full.py \
            --input "data/autohome_raw_$(date -u +%Y-%m).csv" || true
          
      - name: Enrich brand/model from <title>
        run: |
          for f in data/autohome_raw_*_with_series.csv; do
            out="${f%_with_series.csv}_with_brand.csv"
            python tools/enrich_brand_from_title.py --input "$f" --output "$out"
          done

      - name: Translate brand/model to global names (LLM; auto-detect files)
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI }}
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          targets=()
          for f in data/autohome_raw_*_with_brand.csv; do
            out="${f%.csv}_ja.csv"
            if [ ! -f "$out" ] || [ "$f" -nt "$out" ]; then
              targets+=("$f")
            fi
          done
          if [ ${#targets[@]} -eq 0 ]; then
            echo "No files need translation."
            exit 0
          fi
          for inp in "${targets[@]}"; do
            out="${inp%.csv}_ja.csv"
            echo "Translating: $inp -> $out"
            python tools/translate_brand_model_llm.py \
              --input "$inp" \
              --output "$out" \
              --brand-col brand --model-col model \
              --brand-ja-col brand_ja --model-ja-col model_ja \
              --cache .cache/global_map.json
          done

      - name: List outputs before commit
        run: ls -lh data | tail -n 200 || true

      - name: Commit artifacts
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "auto: append + enrich + LLM translate (updated or missing _ja.csv)"
            git push
          else
            echo "No changes to commit."
          fi
