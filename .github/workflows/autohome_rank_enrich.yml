name: autohome-rank-enrich

on:
  schedule:
    # 毎月5日 01:20 UTC（北京朝9:20）に前月分を取得
    - cron: '20 1 5 * *'
  workflow_dispatch:
    inputs:
      month:
        description: 'ターゲット月 (YYYY-MM)。未指定なら前月を自動計算'
        required: false
        default: ''

env:
  PYTHON_VERSION: '3.11'
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install deps (pip)
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          # tqdm/tenacity は enrich_brand_from_pages_vlm.py が参照
          pip install tqdm tenacity

      - name: Install Playwright Chromium (if needed)
        run: |
          python -m playwright install chromium

      - name: Resolve MONTH (前月 or 手動指定)
        shell: bash
        run: |
          if [[ -n "${{ github.event.inputs.month }}" ]]; then
            MONTH="${{ github.event.inputs.month }}"
          else
            # 前月を計算（UbuntuランナーはGNU dateの -d が使えます）
            MONTH=$(date -u -d "$(date +%Y-%m-01) -1 day" +'%Y-%m')
          fi
          echo "MONTH=$MONTH" >> $GITHUB_ENV
          echo "Resolved MONTH=$MONTH"

      - name: Run VLM pipeline to produce RAW CSV
        run: |
          mkdir -p data
          python vlm_rank_reader.py \
            --url "https://www.autohome.com.cn/rank/1-3-1071-x/${{ env.MONTH }}.html" \
            --out "data/autohome_raw_${{ env.MONTH }}.csv"

      - name: Upload tiles as artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: tiles-${{ env.MONTH }}
          path: |
            tiles/*.jpg
            tiles/*.jpeg
            tiles/*.png
            tiles/index.html
          if-no-files-found: ignore

      - name: Enrich brand column by VLM (2nd CSV)
        run: |
          python tools/enrich_brand_from_pages_vlm.py \
            --input "data/autohome_raw_${{ env.MONTH }}.csv" \
            --output "data/autohome_rank_${{ env.MONTH }}.csv" \
            --engine openai --model gpt-4o-mini

      - name: Upload CSVs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: csv-${{ env.MONTH }}
          path: |
            data/autohome_raw_${{ env.MONTH }}.csv
            data/autohome_rank_${{ env.MONTH }}.csv

      - name: Commit CSVs back to repo
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/autohome_raw_${{ env.MONTH }}.csv data/autohome_rank_${{ env.MONTH }}.csv
          git commit -m "Add Autohome CSVs for ${{ env.MONTH }}" || echo "nothing to commit"
          git push
