name: autohome_config_to_csv
true:
  workflow_dispatch: null
  schedule:
  - cron: 15 1 * * *
  workflow_run:
    workflows:
    - autohome_pipeline
    types:
    - completed
permissions:
  contents: write
jobs:
  prepare_series_from_pipeline:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion
      == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      series: ${{ steps.mkjson.outputs.series }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install jq and unzip
      run: 'set -euo pipefail

        sudo apt-get update

        sudo apt-get install -y jq unzip curl gh

        '
    - name: Wait for upstream artifacts to be ready
      run: 'echo "Waiting 60 seconds for autohome-series-urls to finalize..."

        sleep 60

        '
    - name: Download artifact (autohome-series-urls)
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: "set -euo pipefail\nmkdir -p artifact\ngh run download ${{ github.event.workflow_run.id\
        \ }} \\\n  --name autohome-series-urls \\\n  --dir artifact \\\n  --repo \"\
        ${{ github.repository }}\"\necho \"Downloaded files under artifact/:\"\nls\
        \ -R artifact || true\n"
    - name: Make JSON array of series IDs
      id: mkjson
      run: "set -euo pipefail\nsrc=\"artifact/series_ids.txt\"\nif [ ! -f \"$src\"\
        \ ]; then\n  echo \"series_ids.txt not found directly under artifact/, trying\
        \ fallback...\"\n  src=$(find artifact -type f -name \"series_ids.txt\" |\
        \ head -n 1 || true)\nfi\nif [ -z \"${src:-}\" ] || [ ! -f \"$src\" ]; then\n\
        \  echo \"series_ids.txt not found anywhere under artifact/\"\n  exit 1\n\
        fi\necho \"Top of series IDs:\"\nhead -n 10 \"$src\" || true\njson=$(awk 'NF>0'\
        \ \"$src\" | sed 's/[^0-9]//g' | awk 'NF>0' | jq -R -s -c 'split(\"\\n\")|map(select(length>0))')\n\
        echo \"series=$json\" >> \"$GITHUB_OUTPUT\"\n"
  run_per_series_like_test:
    needs: prepare_series_from_pipeline
    if: ${{ needs.prepare_series_from_pipeline.outputs.series != '' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        series: ${{ fromJSON(needs.prepare_series_from_pipeline.outputs.series) }}
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      CURRENCY: ${{ secrets.CURRENCY }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: 'set -e

        python -m pip install --upgrade pip

        pip install pandas openai

        pip install playwright beautifulsoup4 lxml requests || true

        python -m playwright install chromium || true

        '
    - name: Run config crawler
      run: 'set -euo pipefail

        mkdir -p "output/autohome/${{ matrix.series }}"

        python tools/autohome_config_to_csv.py --series "${{ matrix.series }}" ||
        echo "No config generated"

        ls -R output || true

        '
    - name: Translate columns (guarded)
      env:
        SERIES_ID: ${{ matrix.series }}
        CACHE_REPO_DIR: cache
      run: "set -euo pipefail\nIN=\"output/autohome/${{ matrix.series }}/config_${{\
        \ matrix.series }}.csv\"\necho \"CSV_IN check: $IN\"\nif [ -f \"$IN\" ]; then\n\
        \  echo \"Pre-run cache listing:\"\n  ls -l \"cache/${{ matrix.series }}\"\
        \ || echo \"(no cache dir)\"\n  export CSV_IN=\"$IN\"\n  python tools/translate_columns.py\n\
        else\n  echo \"Skip translate: $IN not found.\"\nfi\n"
    - name: Commit repo cache and outputs
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: 'set -e

        git config --global user.name  "github-actions[bot]"

        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        git config --global --add safe.directory "$GITHUB_WORKSPACE"


        mkdir -p "cache/${{ matrix.series }}" || true

        git add -A "cache/${{ matrix.series }}/" || true

        git add -A "output/autohome/${{ matrix.series }}/" || true

        git commit -m "update series ${{ matrix.series }} (CN/JA outputs & cache)"
        || echo "No changes to commit"

        git pull --rebase || true

        git push || true

        '
    - name: Upload artifacts (optional)
      uses: actions/upload-artifact@v4
      with:
        name: autohome-config-csv-${{ matrix.series }}
        path: 'output/autohome/${{ matrix.series }}/config_${{ matrix.series }}.csv

          output/autohome/${{ matrix.series }}/config_${{ matrix.series }}.ja.csv

          output/autohome/${{ matrix.series }}/config_${{ matrix.series }}_ja.csv

          cache/${{ matrix.series }}/

          '
        if-no-files-found: warn
