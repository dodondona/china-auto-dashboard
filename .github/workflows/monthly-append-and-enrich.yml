name: Monthly append series_url & enrich & translate (rank/1)

on:
  schedule:
    - cron: '15 0 3 * *'   # JST 09:15 毎月3日
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # フォールバック用に OpenCC を追加（requirements.txt へ入れてもOK）
          pip install opencc-python-reimplemented

      # （ここはあなたの現行の rank 抽出・series_url 付与・title 解析 LLМ のステップ）
      # 例）
      - name: Resolve paths
        id: paths
        shell: bash
        run: |
          RAW=$(ls -1t data/autohome_raw_*.csv | head -n 1)
          YM=$(basename "$RAW" | sed -E 's/^autohome_raw_([0-9]{4}-[0-9]{2}).*/\1/')
          echo "ym=$YM" >> $GITHUB_OUTPUT
          echo "raw=$RAW" >> $GITHUB_OUTPUT
          echo "with_series=data/autohome_raw_${YM}_with_series.csv" >> $GITHUB_OUTPUT
          echo "with_brand=data/autohome_raw_${YM}_with_brand.csv" >> $GITHUB_OUTPUT
          echo "with_brand_ja=data/autohome_raw_${YM}_with_brand_ja.csv" >> $GITHUB_OUTPUT

      # …中略… Append series_url, Enrich brand/model from <title> via LLM まで既存どおり…

      - name: Translate brand/model to Japanese (LLM→fallback)
        run: |
          python tools/translate_brand_model_ja.py \
            --input  "${{ steps.paths.outputs.with_brand }}" \
            --output "${{ steps.paths.outputs.with_brand_ja }}" \
            --model  "gpt-4o-mini"

      - name: List outputs before commit
        run: |
          echo "== data =="
          ls -lh data | sed -e 's/^/  /'
          echo "== head translated =="
          python - <<'PY'
import pandas as pd
import os
p = os.environ.get("WITH_BRAND_JA","${{ steps.paths.outputs.with_brand_ja }}")
df = pd.read_csv(p)
print(df[['brand','model','brand_ja','model_ja']].head(15).to_string(index=False))
PY

      - name: Commit artifacts
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "${{ steps.paths.outputs.with_brand_ja }}" || true
          git commit -m "translate brand/model to Japanese: ${{ steps.paths.outputs.ym }}" || echo "Nothing to commit"
          git push
