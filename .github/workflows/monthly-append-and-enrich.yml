name: Monthly append series_url & enrich brand/series (rank/1 + VLM fallback)

on:
  schedule:
    - cron: '15 0 3 * *'   # JST 09:15 毎月3日
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install CJK fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-noto-cjk fonts-wqy-zenhei fonts-wqy-microhei
          sudo fc-cache -fv

      - name: Install Playwright Chromium
        run: |
          python -m playwright install chromium

      # 入出力ファイルを自動判定
      - name: Resolve paths
        id: paths
        shell: bash
        run: |
          RAW=$(ls -1t data/autohome_raw_*.csv | head -n 1 || true)
          if [ -z "$RAW" ]; then
            echo "❌ data/autohome_raw_*.csv が見つかりません"; exit 1
          fi
          YM=$(basename "$RAW" | sed -E 's/^autohome_raw_([0-9]{4}-[0-9]{2}).*/\1/')
          echo "→ 最新CSV: $RAW"
          WITH_SERIES="data/autohome_raw_${YM}_with_series.csv"
          WITH_BRAND="data/autohome_raw_${YM}_with_brand.csv"
          VLMFIX="data/autohome_rank_${YM}_vlmfix.csv"

          echo "ym=${YM}" >> $GITHUB_OUTPUT
          echo "raw=${RAW}" >> $GITHUB_OUTPUT
          echo "with_series=${WITH_SERIES}" >> $GITHUB_OUTPUT
          echo "with_brand=${WITH_BRAND}" >> $GITHUB_OUTPUT
          echo "vlmfix=${VLMFIX}" >> $GITHUB_OUTPUT

      # rank/1 から series_url を補完（Playwright DOMスクロール）
      - name: Append series_url from /rank/1 (infinite scroll)
        run: |
          python tools/append_series_url_from_web.force_dom.py \
            --rank-url https://www.autohome.com.cn/rank/1 \
            --input "${{ steps.paths.outputs.raw }}" \
            --output "${{ steps.paths.outputs.with_series }}" \
            --name-col model \
            --max-rounds 30 \
            --idle-ms 650 \
            --min-delta 3

      # brand/series 情報補完（LLMタイトル解析）
      - name: Enrich brand/series from <title> via LLM
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python tools/enrich_brand_from_title.py \
            --input "${{ steps.paths.outputs.with_series }}" \
            --output "${{ steps.paths.outputs.with_brand }}" \
            --model gpt-4o-mini \
            --conf-threshold 0.7

      # 🔹 VLM による画像ベース補正（rank番号＋車名読み取り）
      - name: Fix misalignment via VLM (from fullpage tiles; DOM非依存)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python tools/vlm_rank_reader_tiles.py \
            --url https://www.autohome.com.cn/rank/1 \
            --out "${{ steps.paths.outputs.vlmfix }}" \
            --model gpt-4o-mini

          python - <<'PY'
          import pandas as pd
          vlm = pd.read_csv("${{ steps.paths.outputs.vlmfix }}")      # rank,brand,model,count
          df  = pd.read_csv("${{ steps.paths.outputs.with_brand }}")  # 既存 with_brand.csv
          df = df.set_index("rank")
          for rk, row in vlm.set_index("rank").iterrows():
              mv = str(row.get("model") or "").strip()
              if mv and rk in df.index:
                  df.at[rk, "model"] = mv
          df.reset_index(inplace=True)
          df.to_csv("${{ steps.paths.outputs.with_brand }}", index=False, encoding="utf-8-sig")
          print("✅ with_brand updated by VLM (tiles)")
          PY

      - name: List outputs before commit
        run: |
          echo "== ls -lh data =="
          ls -lh data | sed -e 's/^/  /'
          echo "== git status -s =="
          git status -s

      - name: Commit artifacts
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/*.csv || true
          git status -s
          git commit -m "monthly enrich + VLM fix: ${{ steps.paths.outputs.ym }}" || echo "Nothing to commit"
          git push
